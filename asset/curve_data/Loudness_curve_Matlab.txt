% Get this figure: fig = getplotlyfig('finnhh', 11)
% Get this figure's data: fig = getplotlyfig('finnhh', 11); fig.data
% Add data to this figure: plotly([1, 2], [2, 3], struct('filename', 'Equal Loudness Contours (1)', 'fileopt', 'extend'))
% Get y data of first trace: fig = getplotlyfig('finnhh', 11); y1 = fig.data{1}.y

% Get figure documentation: https://plot.ly/matlab/get-requests/
% Add data documentation: https://plot.ly/matlab/file-options/

% You can reproduce this figure in MATLAB with the following code!

% Learn about API authentication here: https://plot.ly/matlab/getting-started
% Find your api_key here: https://plot.ly/settings/api

signin('username', 'api_key')
trace1 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [0, 76.55, 65.62, 55.12, 45.53, 37.63, 30.86, 25.02, 20.51, 16.65, 13.12, 10.09, 7.54, 5.11, 3.06, 1.48, 0.3, -0.3, -0.01, 1.03, -1.19, -4.11, -7.05, -9.03, -8.49, -4.48, 3.28, 9.83, 10.48, 8.38, 14.1, 79.65], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'mode', 'lines', ...
  'name', '0 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', '2f3110db4a664830fa7bf7ba3d827626', ...
  'visible', true);
trace2 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [10, 83.75, 75.76, 68.21, 61.14, 54.96, 49.01, 43.24, 38.13, 33.48, 28.77, 24.84, 21.33, 18.05, 15.14, 12.98, 11.18, 9.99, 10, 11.26, 10.43, 7.27, 4.45, 3.04, 3.8, 7.46, 14.35, 20.98, 23.43, 22.33, 25.17, 81.47], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(31, 138, 112)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(31, 138, 112)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(31, 138, 112)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '10 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', 'ca2fa95b263061804d531d57ec276df1');
trace3 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [20, 89.58, 82.65, 75.98, 69.62, 64.02, 58.55, 53.19, 48.38, 43.94, 39.37, 35.51, 31.99, 28.69, 25.67, 23.43, 21.48, 20.1, 20.01, 21.46, 21.4, 18.15, 15.38, 14.26, 15.14, 18.63, 25.02, 31.52, 34.43, 33.04, 34.67, 84.18], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(190, 219, 57)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(190, 219, 57)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(190, 219, 57)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '20 Phons', ...
  'opacity', 1, ...% Get this figure: fig = getplotlyfig('finnhh', 11)
% Get this figure's data: fig = getplotlyfig('finnhh', 11); fig.data
% Add data to this figure: plotly([1, 2], [2, 3], struct('filename', 'Equal Loudness Contours (1)', 'fileopt', 'extend'))
% Get y data of first trace: fig = getplotlyfig('finnhh', 11); y1 = fig.data{1}.y

% Get figure documentation: https://plot.ly/matlab/get-requests/
% Add data documentation: https://plot.ly/matlab/file-options/

% You can reproduce this figure in MATLAB with the following code!

% Learn about API authentication here: https://plot.ly/matlab/getting-started
% Find your api_key here: https://plot.ly/settings/api

signin('username', 'api_key')
trace1 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [0, 76.55, 65.62, 55.12, 45.53, 37.63, 30.86, 25.02, 20.51, 16.65, 13.12, 10.09, 7.54, 5.11, 3.06, 1.48, 0.3, -0.3, -0.01, 1.03, -1.19, -4.11, -7.05, -9.03, -8.49, -4.48, 3.28, 9.83, 10.48, 8.38, 14.1, 79.65], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'mode', 'lines', ...
  'name', '0 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', '2f3110db4a664830fa7bf7ba3d827626', ...
  'visible', true);
trace2 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [10, 83.75, 75.76, 68.21, 61.14, 54.96, 49.01, 43.24, 38.13, 33.48, 28.77, 24.84, 21.33, 18.05, 15.14, 12.98, 11.18, 9.99, 10, 11.26, 10.43, 7.27, 4.45, 3.04, 3.8, 7.46, 14.35, 20.98, 23.43, 22.33, 25.17, 81.47], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(31, 138, 112)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(31, 138, 112)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(31, 138, 112)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '10 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', 'ca2fa95b263061804d531d57ec276df1');
trace3 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [20, 89.58, 82.65, 75.98, 69.62, 64.02, 58.55, 53.19, 48.38, 43.94, 39.37, 35.51, 31.99, 28.69, 25.67, 23.43, 21.48, 20.1, 20.01, 21.46, 21.4, 18.15, 15.38, 14.26, 15.14, 18.63, 25.02, 31.52, 34.43, 33.04, 34.67, 84.18], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(190, 219, 57)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(190, 219, 57)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(190, 219, 57)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '20 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', '87e6b73a58fc459d17d560730d50c0d5');
trace4 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [40, 99.85, 93.94, 88.17, 82.63, 77.78, 73.08, 68.48, 64.37, 60.59, 56.7, 53.41, 50.4, 47.58, 44.98, 43.05, 41.34, 40.06, 40.01, 41.82, 42.51, 39.23, 36.51, 35.61, 36.65, 40.01, 45.83, 51.8, 54.28, 51.49, 51.96, 92.77], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(255, 225, 26)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(255, 225, 26)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(255, 225, 26)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '40 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', 'd153fe7630f61e1d9a8f07be4ab165b7');
trace5 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [60, 109.51, 104.23, 99.08, 94.18, 89.96, 85.94, 82.05, 78.65, 75.56, 72.47, 69.86, 67.53, 65.39, 63.45, 62.05, 60.81, 59.89, 60.01, 62.15, 63.19, 59.96, 57.26, 56.42, 57.57, 60.89, 66.36, 71.66, 73.16, 68.63, 68.43, 104.92], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(253, 116, 0)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(253, 116, 0)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(253, 116, 0)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '60 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', '80651448ee5efd23d0fde814edc72310');
trace6 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [80, 118.99, 114.23, 109.65, 105.34, 101.72, 98.36, 95.17, 92.48, 90.09, 87.82, 85.92, 84.31, 82.89, 81.68, 80.86, 80.17, 79.67, 80.01, 82.48, 83.74, 80.59, 77.88, 77.07, 78.31, 81.62, 86.81, 91.41, 91.74, 85.41, 84.67, 118.95], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(166, 28, 0)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(166, 28, 0)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(166, 28, 0)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '80 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', '97f658c3e101dda01f1e65884840decd');
trace7 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [100, 128.41, 124.15, 120.11, 116.38, 113.35, 110.65, 108.16, 106.17, 104.48, 103.03, 101.85, 100.97, 100.3, 99.83, 99.62, 99.5, 99.44, 100.01, 102.81, 104.25, 101.18, 98.48, 97.67, 99, 102.3, 107.23, 111.11, 110.23, 102.07, 100.83, 133.73], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '100 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', 'ea075c7412d3d3877514a094b1ca08a8');
data = {trace1, trace2, trace3, trace4, trace5, trace6, trace7};
layout = struct(...
    'annotations', { {...
      struct(...
        'x', 2.89988271769, ...
        'y', 104.961651218, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 0, ...
        'arrowsize', 0.9, ...
        'arrowwidth', 2.2, ...
        'ax', -10, ...
        'ay', -28.6796875, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '100 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92325281246, ...
        'y', 84.1988486385, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 0, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', -10, ...
        'ay', -28.6796875, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '80 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92113994721, ...
        'y', 64.2837346566, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', -10, ...
        'ay', -28.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '60 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92124121649, ...
        'y', 43.5691285624, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', -10, ...
        'ay', -28.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '40 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92169535763, ...
        'y', 23.6749556323, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', 313, ...
        'ay', -22.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '20 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.9250392225, ...
        'y', 12.4772328054, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', 123, ...
        'ay', -28.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '10 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.94170722056, ...
        'y', 2.40687613368, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', 75, ...
        'ay', -4.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '0 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y')...
    } }, ...
    'autosize', false, ...
    'bargap', 0.2, ...
    'bargroupgap', 0, ...
    'barmode', 'stack', ...
    'boxgap', 0.3, ...
    'boxgroupgap', 0.3, ...
    'boxmode', 'overlay', ...
    'dragmode', 'zoom', ...
    'font', struct(...
      'color', '#444', ...
      'family', '"Droid Sans", sans-serif', ...
      'size', 12), ...
    'height', 1000, ...
    'hidesources', false, ...
    'hovermode', 'x', ...
    'legend', struct(...
      'x', 0.02, ...
      'y', 1, ...
      'bgcolor', 'white', ...
      'bordercolor', 'black', ...
      'borderwidth', 0, ...
      'font', struct(...
        'color', '', ...
        'family', '', ...
        'size', 0), ...
      'traceorder', 'reversed'), ...
    'margin', struct(...
      'r', 80, ...
      't', 100, ...
      'b', 80, ...
      'l', 80, ...
      'pad', 2), ...
    'paper_bgcolor', 'rgb(213, 226, 233)', ...
    'plot_bgcolor', 'rgb(213, 226, 233)', ...
    'separators', '.,', ...
    'showlegend', false, ...
    'title', 'Equal Loudness Contours (ISO 226-2003)', ...
    'titlefont', struct(...
      'color', '#444', ...
      'family', '"Open sans", verdana, arial, sans-serif', ...
      'size', 17), ...
    'width', 1500, ...
    'xaxis', struct(...
      'anchor', 'y', ...
      'autorange', false, ...
      'domain', [0, 1], ...
      'dtick', 'D1', ...
      'exponentformat', 'B', ...
      'gridcolor', 'white', ...
      'gridwidth', 1, ...
      'linecolor', 'rgba(152, 0, 0, 0.5)', ...
      'linewidth', 1.5, ...
      'mirror', false, ...
      'nticks', 0, ...
      'overlaying', false, ...
      'position', 0, ...
      'range', [1.30102999566, 4.30102999566], ...
      'rangemode', 'normal', ...
      'showexponent', 'all', ...
      'showgrid', false, ...
      'showline', false, ...
      'showticklabels', true, ...
      'side', 'bottom', ...
      'tick0', 0, ...
      'tickangle', 'auto', ...
      'tickcolor', 'rgba(0, 0, 0, 0)', ...
      'tickfont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 10), ...
      'ticklen', 6, ...
      'tickmode', 'auto', ...
      'ticks', '', ...
      'tickwidth', 1, ...
      'title', 'Frequency (Hz)', ...
      'titlefont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 12), ...
      'type', 'log', ...
      'zeroline', false, ...
      'zerolinecolor', '#444', ...
      'zerolinewidth', 1), ...
    'yaxis', struct(...
      'anchor', 'x', ...
      'autorange', false, ...
      'domain', [0, 1], ...
      'dtick', 10, ...
      'exponentformat', 'B', ...
      'gridcolor', 'white', ...
      'gridwidth', 1, ...
      'linecolor', 'rgba(152, 0, 0, 0.5)', ...
      'linewidth', 1.5, ...
      'mirror', false, ...
      'nticks', 0, ...
      'overlaying', false, ...
      'position', 0, ...
      'range', [-10, 130], ...
      'rangemode', 'normal', ...
      'showexponent', 'all', ...
      'showgrid', true, ...
      'showline', false, ...
      'showticklabels', true, ...
      'tick0', 0, ...
      'tickangle', 'auto', ...
      'tickcolor', 'rgba(0, 0, 0, 0)', ...
      'tickfont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 10), ...
      'ticklen', 6, ...
      'tickmode', 'auto', ...
      'ticks', '', ...
      'tickwidth', 1, ...
      'title', 'Sound Pressure Level (dB SPL)', ...
      'titlefont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 12), ...
      'type', 'linear', ...
      'zeroline', false, ...
      'zerolinecolor', '#444', ...
      'zerolinewidth', 1));
response = plotly(data, struct('layout', layout));
plot_url = response.url
  'type', 'scatter', ...
  'uid', '87e6b73a58fc459d17d560730d50c0d5');
trace4 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [40, 99.85, 93.94, 88.17, 82.63, 77.78, 73.08, 68.48, 64.37, 60.59, 56.7, 53.41, 50.4, 47.58, 44.98, 43.05, 41.34, 40.06, 40.01, 41.82, 42.51, 39.23, 36.51, 35.61, 36.65, 40.01, 45.83, 51.8, 54.28, 51.49, 51.96, 92.77], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(255, 225, 26)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(255, 225, 26)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(255, 225, 26)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '40 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', 'd153fe7630f61e1d9a8f07be4ab165b7');
trace5 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [60, 109.51, 104.23, 99.08, 94.18, 89.96, 85.94, 82.05, 78.65, 75.56, 72.47, 69.86, 67.53, 65.39, 63.45, 62.05, 60.81, 59.89, 60.01, 62.15, 63.19, 59.96, 57.26, 56.42, 57.57, 60.89, 66.36, 71.66, 73.16, 68.63, 68.43, 104.92], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(253, 116, 0)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(253, 116, 0)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(253, 116, 0)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '60 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', '80651448ee5efd23d0fde814edc72310');
trace6 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [80, 118.99, 114.23, 109.65, 105.34, 101.72, 98.36, 95.17, 92.48, 90.09, 87.82, 85.92, 84.31, 82.89, 81.68, 80.86, 80.17, 79.67, 80.01, 82.48, 83.74, 80.59, 77.88, 77.07, 78.31, 81.62, 86.81, 91.41, 91.74, 85.41, 84.67, 118.95], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(166, 28, 0)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(166, 28, 0)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(166, 28, 0)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '80 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', '97f658c3e101dda01f1e65884840decd');
trace7 = struct(...
  'x', { {'frequency', 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000} }, ...
  'y', [100, 128.41, 124.15, 120.11, 116.38, 113.35, 110.65, 108.16, 106.17, 104.48, 103.03, 101.85, 100.97, 100.3, 99.83, 99.62, 99.5, 99.44, 100.01, 102.81, 104.25, 101.18, 98.48, 97.67, 99, 102.3, 107.23, 111.11, 110.23, 102.07, 100.83, 133.73], ...
  'connectgaps', false, ...
  'error_x', struct(...
    'color', 'black', ...
    'copy_ystyle', true, ...
    'thickness', '1', ...
    'width', '2'), ...
  'error_y', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'thickness', 1, ...
    'width', 1), ...
  'fill', 'none', ...
  'line', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'dash', 'solid', ...
    'shape', 'linear', ...
    'width', 1), ...
  'marker', struct(...
    'color', 'rgb(0, 67, 88)', ...
    'line', struct(...
      'color', 'white', ...
      'width', 6), ...
    'size', 6, ...
    'symbol', 'hexagon-open'), ...
  'name', '100 Phons', ...
  'opacity', 1, ...
  'type', 'scatter', ...
  'uid', 'ea075c7412d3d3877514a094b1ca08a8');
data = {trace1, trace2, trace3, trace4, trace5, trace6, trace7};
layout = struct(...
    'annotations', { {...
      struct(...
        'x', 2.89988271769, ...
        'y', 104.961651218, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 0, ...
        'arrowsize', 0.9, ...
        'arrowwidth', 2.2, ...
        'ax', -10, ...
        'ay', -28.6796875, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '100 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92325281246, ...
        'y', 84.1988486385, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 0, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', -10, ...
        'ay', -28.6796875, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '80 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92113994721, ...
        'y', 64.2837346566, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', -10, ...
        'ay', -28.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '60 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92124121649, ...
        'y', 43.5691285624, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', -10, ...
        'ay', -28.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '40 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.92169535763, ...
        'y', 23.6749556323, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', 313, ...
        'ay', -22.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '20 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.9250392225, ...
        'y', 12.4772328054, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', 123, ...
        'ay', -28.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '10 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y'), ...
      struct(...
        'x', 2.94170722056, ...
        'y', 2.40687613368, ...
        'align', 'center', ...
        'arrowcolor', '', ...
        'arrowhead', 1, ...
        'arrowsize', 1, ...
        'arrowwidth', 0, ...
        'ax', 75, ...
        'ay', -4.5, ...
        'bgcolor', 'rgba(0, 0, 0, 0)', ...
        'bordercolor', 'rgba(0, 0, 0, 0)', ...
        'borderpad', 1, ...
        'borderwidth', 1, ...
        'font', struct(...
          'color', '#444', ...
          'family', '"Open sans", verdana, arial, sans-serif', ...
          'size', 12), ...
        'opacity', 1, ...
        'showarrow', false, ...
        'text', '0 Phons', ...
        'textangle', 0, ...
        'xref', 'x', ...
        'yref', 'y')...
    } }, ...
    'autosize', false, ...
    'bargap', 0.2, ...
    'bargroupgap', 0, ...
    'barmode', 'stack', ...
    'boxgap', 0.3, ...
    'boxgroupgap', 0.3, ...
    'boxmode', 'overlay', ...
    'dragmode', 'zoom', ...
    'font', struct(...
      'color', '#444', ...
      'family', '"Droid Sans", sans-serif', ...
      'size', 12), ...
    'height', 1000, ...
    'hidesources', false, ...
    'hovermode', 'x', ...
    'legend', struct(...
      'x', 0.02, ...
      'y', 1, ...
      'bgcolor', 'white', ...
      'bordercolor', 'black', ...
      'borderwidth', 0, ...
      'font', struct(...
        'color', '', ...
        'family', '', ...
        'size', 0), ...
      'traceorder', 'reversed'), ...
    'margin', struct(...
      'r', 80, ...
      't', 100, ...
      'b', 80, ...
      'l', 80, ...
      'pad', 2), ...
    'paper_bgcolor', 'rgb(213, 226, 233)', ...
    'plot_bgcolor', 'rgb(213, 226, 233)', ...
    'separators', '.,', ...
    'showlegend', false, ...
    'title', 'Equal Loudness Contours (ISO 226-2003)', ...
    'titlefont', struct(...
      'color', '#444', ...
      'family', '"Open sans", verdana, arial, sans-serif', ...
      'size', 17), ...
    'width', 1500, ...
    'xaxis', struct(...
      'anchor', 'y', ...
      'autorange', false, ...
      'domain', [0, 1], ...
      'dtick', 'D1', ...
      'exponentformat', 'B', ...
      'gridcolor', 'white', ...
      'gridwidth', 1, ...
      'linecolor', 'rgba(152, 0, 0, 0.5)', ...
      'linewidth', 1.5, ...
      'mirror', false, ...
      'nticks', 0, ...
      'overlaying', false, ...
      'position', 0, ...
      'range', [1.30102999566, 4.30102999566], ...
      'rangemode', 'normal', ...
      'showexponent', 'all', ...
      'showgrid', false, ...
      'showline', false, ...
      'showticklabels', true, ...
      'side', 'bottom', ...
      'tick0', 0, ...
      'tickangle', 'auto', ...
      'tickcolor', 'rgba(0, 0, 0, 0)', ...
      'tickfont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 10), ...
      'ticklen', 6, ...
      'tickmode', 'auto', ...
      'ticks', '', ...
      'tickwidth', 1, ...
      'title', 'Frequency (Hz)', ...
      'titlefont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 12), ...
      'type', 'log', ...
      'zeroline', false, ...
      'zerolinecolor', '#444', ...
      'zerolinewidth', 1), ...
    'yaxis', struct(...
      'anchor', 'x', ...
      'autorange', false, ...
      'domain', [0, 1], ...
      'dtick', 10, ...
      'exponentformat', 'B', ...
      'gridcolor', 'white', ...
      'gridwidth', 1, ...
      'linecolor', 'rgba(152, 0, 0, 0.5)', ...
      'linewidth', 1.5, ...
      'mirror', false, ...
      'nticks', 0, ...
      'overlaying', false, ...
      'position', 0, ...
      'range', [-10, 130], ...
      'rangemode', 'normal', ...
      'showexponent', 'all', ...
      'showgrid', true, ...
      'showline', false, ...
      'showticklabels', true, ...
      'tick0', 0, ...
      'tickangle', 'auto', ...
      'tickcolor', 'rgba(0, 0, 0, 0)', ...
      'tickfont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 10), ...
      'ticklen', 6, ...
      'tickmode', 'auto', ...
      'ticks', '', ...
      'tickwidth', 1, ...
      'title', 'Sound Pressure Level (dB SPL)', ...
      'titlefont', struct(...
        'color', 'black', ...
        'family', '"Verdana", monospace', ...
        'size', 12), ...
      'type', 'linear', ...
      'zeroline', false, ...
      'zerolinecolor', '#444', ...
      'zerolinewidth', 1));
response = plotly(data, struct('layout', layout));
plot_url = response.url
